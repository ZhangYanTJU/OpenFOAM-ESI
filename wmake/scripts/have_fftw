#----------------------------------*-sh-*--------------------------------------
# =========                 |
# \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
#  \\    /   O peration     |
#   \\  /    A nd           | www.openfoam.com
#    \\/     M anipulation  |
#------------------------------------------------------------------------------
#     Copyright (C) 2018-2020 OpenCFD Ltd.
#------------------------------------------------------------------------------
# License
#     This file is part of OpenFOAM, distributed under GPL-3.0-or-later.
#
# Script
#     have_fftw
#
# Description
#     Detection/setup of FFTW
#
# Requires
#     FFTW_ARCH_PATH
# or  config.sh/FFTW (when FFTW_ARCH_PATH is empty)
#
# Functions provided
#     have_fftw, no_fftw, echo_fftw, query_fftw, search_fftw
#
# Variables set on success
#     HAVE_FFTW
#     FFTW_ARCH_PATH
#     FFTW_INC_DIR
#     FFTW_LIB_DIR
#
#------------------------------------------------------------------------------
. ${WM_PROJECT_DIR:?}/wmake/scripts/sysFunctions    # General system functions

#------------------------------------------------------------------------------

# Reset
no_fftw()
{
    unset HAVE_FFTW FFTW_INC_DIR FFTW_LIB_DIR
}


# Report
echo_fftw()
{
    echo "fftw=${HAVE_FFTW:-false}"
    echo "root=\"$FFTW_ARCH_PATH\""
    echo "include=\"$FFTW_INC_DIR\""
    echo "library=\"$FFTW_LIB_DIR\""
}



# Search
# $1 : prefix (*_ARCH_PATH, system, ...)
#
# On success, return 0 and export variables
# -> HAVE_FFTW, FFTW_INC_DIR, FFTW_LIB_DIR
search_fftw()
{
    local warn # warn="==> skip fftw"
    local incName="fftw3.h"
    local libName="libfftw3"

    local prefix="${1:-system}"
    local header library

    # ----------------------------------
    if isNone "$prefix"
    then
        [ -n "$warn" ] && echo "$warn (disabled)"
        return 1
    elif hasAbsdir "$prefix"
    then
        header=$(findFirstFile "$prefix/include/$incName")
        library=$(findExtLib "$libName")
    elif isSystem "$prefix"
    then
        header=$(findSystemInclude -name="$incName")
        prefix=$(sysPrefix "$header")
    else
        unset prefix
    fi
    # ----------------------------------

    # Header
    [ -n "$header" ] || {
        [ -n "$warn" ] && echo "$warn (no header)"
        return 2
    }

    # Library
    [ -n "$library" ] \
    || library=$(findLibrary -prefix="$prefix" -name="$libName") \
    || {
        [ -n "$warn" ] && echo "$warn (no library)"
        return 2
    }

    # ----------------------------------

    # OK
    export HAVE_FFTW=true
    export FFTW_ARCH_PATH="$prefix"
    export FFTW_INC_DIR="${header%/*}"     # Basename
    export FFTW_LIB_DIR="${library%/*}"    # Basename
}


# Output as per search_* function
have_fftw()
{
    local warn # warn="==> skip fftw"
    local config="config.sh/FFTW"
    local file

    # Setup - current environment if set
    if [ -z "$FFTW_ARCH_PATH" ]
    then
        if file="$("$WM_PROJECT_DIR"/bin/foamEtcFile "$config")"
        then
            . "$file"
        else
            [ -n "$warn" ] && echo "$warn (no $config)"
            return 2
        fi
    fi

    search_fftw "$FFTW_ARCH_PATH"
}


# Query settings
query_fftw()
{
    local config="config.sh/FFTW"
    local file

    if file="$("$WM_PROJECT_DIR"/bin/foamEtcFile -mode=o "$config")"
    then
        . "$file"
        _process_query fftw "$FFTW_ARCH_PATH"
    else
        echo "(no $config)" 1>&2
        echo "fftw=unknown"
    fi
}


#------------------------------------------------------------------------------

# Reset
no_fftw

# Test/query
case "$1" in
-test)
    have_fftw
    echo_fftw
    ;;
-query)
    query_fftw
    ;;
esac

#------------------------------------------------------------------------------
