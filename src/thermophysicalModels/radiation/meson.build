srcfiles = [
    lnInclude_hack,
    'radiationModels/radiationModel/radiationModel.C',
    'radiationModels/radiationModel/radiationModelNew.C',
    'radiationModels/noRadiation/noRadiation.C',
    'radiationModels/P1/P1.C',
    'radiationModels/fvDOM/fvDOM/fvDOM.C',
    'radiationModels/fvDOM/radiativeIntensityRay/radiativeIntensityRay.C',
    'radiationModels/fvDOM/blackBodyEmission/blackBodyEmission.C',
    'radiationModels/fvDOM/absorptionCoeffs/absorptionCoeffs.C',
    'radiationModels/viewFactor/viewFactor.C',
    'radiationModels/opaqueSolid/opaqueSolid.C',
    'radiationModels/solarLoad/solarLoad.C',
    'radiationModels/solarLoad/faceShading/faceShading.C',
    'radiationModels/solarLoad/faceReflecting/faceReflecting.C',
    'radiationModels/solarLoad/solarLoadBase.C',
    'submodels/scatterModel/scatterModel/scatterModel.C',
    'submodels/scatterModel/scatterModel/scatterModelNew.C',
    'submodels/scatterModel/noScatter/noScatter.C',
    'submodels/scatterModel/constantScatter/constantScatter.C',
    'submodels/wallTransmissivityModel/wallTransmissivityModel/wallTransmissivityModel.C',
    'submodels/wallTransmissivityModel/wallTransmissivityModel/wallTransmissivityModelNew.C',
    'submodels/wallTransmissivityModel/constantTransmissivity/constantTransmissivity.C',
    'submodels/wallTransmissivityModel/multiBandTransmissivity/multiBandTransmissivity.C',
    'submodels/wallAbsorptionEmissionModel/wallAbsorptionEmissionModel/wallAbsorptionEmissionModel.C',
    'submodels/wallAbsorptionEmissionModel/wallAbsorptionEmissionModel/wallAbsorptionEmissionModelNew.C',
    'submodels/wallAbsorptionEmissionModel/multiBandAbsorption/multiBandAbsorption.C',
    'submodels/wallAbsorptionEmissionModel/constantAbsorption/constantAbsorption.C',
    'submodels/wallAbsorptionEmissionModel/solidAbsorption/solidAbsorption.C',
    'submodels/absorptionEmissionModel/absorptionEmissionModel/absorptionEmissionModel.C',
    'submodels/absorptionEmissionModel/absorptionEmissionModel/absorptionEmissionModelNew.C',
    'submodels/absorptionEmissionModel/noAbsorptionEmission/noAbsorptionEmission.C',
    'submodels/absorptionEmissionModel/constantAbsorptionEmission/constantAbsorptionEmission.C',
    'submodels/absorptionEmissionModel/binaryAbsorptionEmission/binaryAbsorptionEmission.C',
    'submodels/absorptionEmissionModel/greyMeanAbsorptionEmission/greyMeanAbsorptionEmission.C',
    'submodels/absorptionEmissionModel/wideBandAbsorptionEmission/wideBandAbsorptionEmission.C',
    'submodels/absorptionEmissionModel/greyMeanSolidAbsorptionEmission/greyMeanSolidAbsorptionEmission.C',
    'submodels/absorptionEmissionModel/multiBandAbsorptionEmission/multiBandAbsorptionEmission.C',
    'submodels/absorptionEmissionModel/multiBandZoneAbsorptionEmission/multiBandZoneAbsorptionEmission.C',
    'submodels/boundaryRadiationProperties/boundaryRadiationProperties.C',
    'submodels/boundaryRadiationProperties/boundaryRadiationPropertiesPatch.C',
    'submodels/boundaryRadiationProperties/transparent/transparent.C',
    'submodels/boundaryRadiationProperties/lookup/lookup.C',
    'submodels/boundaryRadiationProperties/opaqueDiffusive/opaqueDiffusive.C',
    'submodels/boundaryRadiationProperties/opaqueReflective/opaqueReflective.C',
    'submodels/sootModel/sootModel/sootModel.C',
    'submodels/sootModel/sootModel/sootModelNew.C',
    'submodels/sootModel/mixtureFractionSoot/mixtureFractionSoots.C',
    'submodels/sootModel/noSoot/noSoot.C',
    'submodels/solarCalculator/solarCalculator.C',
    'derivedFvPatchFields/MarshakRadiation/MarshakRadiationFvPatchScalarField.C',
    'derivedFvPatchFields/MarshakRadiationFixedTemperature/MarshakRadiationFixedTemperatureFvPatchScalarField.C',
    'derivedFvPatchFields/greyDiffusiveRadiation/greyDiffusiveRadiationMixedFvPatchScalarField.C',
    'derivedFvPatchFields/wideBandDiffusiveRadiation/wideBandDiffusiveRadiationMixedFvPatchScalarField.C',
    'derivedFvPatchFields/greyDiffusiveViewFactor/greyDiffusiveViewFactorFixedValueFvPatchScalarField.C',
    'fvOptions/radiation/radiation.C',
]
link_with = [
    lib_finiteVolume,
    lib_fileFormats,
    lib_surfMesh,
    lib_meshTools,
    lib_compressibleTransportModels,
    lib_fluidThermophysicalModels,
    lib_specie,
    lib_solidThermo,
    lib_SLGThermo,
    lib_thermophysicalProperties,
    lib_distributed,
]
dependencies = []
cpp_args = [
    '-I' + meson.source_root() / 'src/thermophysicalModels/radiation',
    '-I' + recursive_include_dirs / 'src/finiteVolume',
    '-I' + recursive_include_dirs / 'src/fileFormats',
    '-I' + recursive_include_dirs / 'src/surfMesh',
    '-I' + recursive_include_dirs / 'src/meshTools',
    '-I' + recursive_include_dirs / 'src/transportModels/compressible',
    '-I' + recursive_include_dirs / 'src/thermophysicalModels/basic',
    '-I' + recursive_include_dirs / 'src/thermophysicalModels/specie',
    '-I' + recursive_include_dirs / 'src/thermophysicalModels/solidThermo',
    '-I' + recursive_include_dirs / 'src/thermophysicalModels/SLGThermo',
    '-I' + recursive_include_dirs / 'src/thermophysicalModels/thermophysicalProperties',
    '-I' + recursive_include_dirs / 'src/thermophysicalModels/reactionThermo',
    '-I' + recursive_include_dirs / 'src/parallel/distributed',
    '-I' + recursive_include_dirs / 'src/thermophysicalModels/radiation',
    '-I' + recursive_include_dirs / 'src/OpenFOAM',
    '-I' + recursive_include_dirs / 'src/OSspecific/POSIX',
]
lib_radiationModels = library(
    'radiationModels',
    srcfiles,
    link_with: link_with,
    dependencies: dependencies,
    cpp_args: cpp_args,
    implicit_include_directories: false,
    install: true,
)
pkg.generate(lib_radiationModels)
