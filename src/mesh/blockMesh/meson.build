srcfiles = [
    lnInclude_hack,
    'blockVertices/blockVertex/blockVertex.C',
    'blockVertices/pointVertex/pointVertex.C',
    'blockVertices/projectVertex/projectVertex.C',
    'blockVertices/namedVertex/namedVertex.C',
    'blockEdges/bezier/bezier.C',
    'blockEdges/blockEdge/blockEdge.C',
    'blockEdges/lineDivide/lineDivide.C',
    'blockEdges/lineEdge/lineEdge.C',
    'blockEdges/polyLineEdge/polyLine.C',
    'blockEdges/polyLineEdge/polyLineEdge.C',
    'blockEdges/arcEdge/arcEdge.C',
    'blockEdges/BSplineEdge/BSpline.C',
    'blockEdges/BSplineEdge/BSplineEdge.C',
    'blockEdges/splineEdge/CatmullRomSpline.C',
    'blockEdges/splineEdge/splineEdge.C',
    'blockEdges/projectEdge/projectEdge.C',
    'blockEdges/projectCurveEdge/projectCurveEdge.C',
    'blockFaces/blockFace/blockFace.C',
    'blockFaces/projectFace/projectFace.C',
    'gradingDescriptor/gradingDescriptor.C',
    'gradingDescriptor/gradingDescriptors.C',
    'blockDescriptor/blockDescriptor.C',
    'blockDescriptor/blockDescriptorEdges.C',
    'blocks/block/block.C',
    'blocks/block/blockCreate.C',
    'blocks/namedBlock/namedBlock.C',
    'blockMesh/blockMesh.C',
    'blockMesh/blockMeshCreate.C',
    'blockMesh/blockMeshTopology.C',
    'blockMesh/blockMeshCheck.C',
    'blockMesh/blockMeshMergeGeometrical.C',
    'blockMesh/blockMeshMergeTopological.C',
    'blockMeshTools/blockMeshTools.C',
    'PDRblockMesh/PDRblock.C',
    'PDRblockMesh/PDRblockBlockMesh.C',
    'PDRblockMesh/PDRblockCreate.C',
    'PDRblockMesh/PDRblockLocation.C',
    'PDRblockMesh/PDRblockOuter.C',
]
link_with = [
    lib_fileFormats,
    lib_surfMesh,
    lib_meshTools,
]
dependencies = []
cpp_args = [
    '-I' + meson.source_root() / 'src/mesh/blockMesh',
    '-I' + recursive_include_dirs / 'src/fileFormats',
    '-I' + recursive_include_dirs / 'src/surfMesh',
    '-I' + recursive_include_dirs / 'src/meshTools',
    '-I' + recursive_include_dirs / 'src/mesh/blockMesh',
    '-I' + recursive_include_dirs / 'src/OpenFOAM',
    '-I' + recursive_include_dirs / 'src/OSspecific/POSIX',
]
lib_blockMesh = library(
    'blockMesh',
    srcfiles,
    link_with: link_with,
    dependencies: dependencies,
    cpp_args: cpp_args,
    implicit_include_directories: false,
    install: true,
)
pkg.generate(lib_blockMesh)
