srcfiles = [
    lnInclude_hack,
    'AMIWeights/AMIWeights.C',
    'binField/binField.C',
    'binField/binModels/binModel/binModel.C',
    'binField/binModels/binModel/binModelNew.C',
    'binField/binModels/uniformBin/uniformBin.C',
    'binField/binModels/singleDirectionUniformBin/singleDirectionUniformBin.C',
    'columnAverage/columnAverage.C',
    'continuityError/continuityError.C',
    'derivedFields/derivedFields.C',
    'expressions/fvExpressionField.C',
    'fieldAverage/fieldAverage.C',
    'fieldAverage/fieldAverageItem/fieldAverageItem.C',
    'fieldAverage/fieldAverageItem/fieldAverageItemIO.C',
    'fieldCoordinateSystemTransform/fieldCoordinateSystemTransform.C',
    'fieldExtents/fieldExtents.C',
    'fieldMinMax/fieldMinMax.C',
    'fieldValues/fieldValue/fieldValue.C',
    'fieldValues/fieldValue/fieldValueNew.C',
    'fieldValues/volFieldValue/volFieldValue.C',
    'fieldValues/surfaceFieldValue/surfaceFieldValue.C',
    'heatTransferCoeff/heatTransferCoeff.C',
    'heatTransferCoeff/heatTransferCoeffModels/heatTransferCoeffModel/heatTransferCoeffModel.C',
    'heatTransferCoeff/heatTransferCoeffModels/heatTransferCoeffModel/heatTransferCoeffModelNew.C',
    'heatTransferCoeff/heatTransferCoeffModels/fixedReferenceTemperature/fixedReferenceTemperature.C',
    'heatTransferCoeff/heatTransferCoeffModels/localReferenceTemperature/localReferenceTemperature.C',
    'heatTransferCoeff/heatTransferCoeffModels/faceZoneReferenceTemperature/faceZoneReferenceTemperature.C',
    'heatTransferCoeff/heatTransferCoeffModels/ReynoldsAnalogy/ReynoldsAnalogy.C',
    'heatTransferCoeff/reactingEulerHtcModel/reactingEulerHtcModel.C',
    'heatTransferCoeff/multiphaseInterHtcModel/multiphaseInterHtcModel.C',
    'limitFields/limitFields.C',
    'multiFieldValue/multiFieldValue.C',
    'nearWallFields/nearWallFields.C',
    'nearWallFields/findCellParticle.C',
    'nearWallFields/findCellParticleCloud.C',
    'processorField/processorField.C',
    'proudmanAcousticPower/proudmanAcousticPower.C',
    'readFields/readFields.C',
    'surfaceDistance/surfaceDistance.C',
    'setFlow/setFlow.C',
    'streamLine/streamLine.C',
    'streamLine/streamLineBase.C',
    'streamLine/streamLineParticle.C',
    'streamLine/streamLineParticleCloud.C',
    'wallBoundedStreamLine/wallBoundedStreamLine.C',
    'wallBoundedStreamLine/wallBoundedStreamLineParticle.C',
    'wallBoundedStreamLine/wallBoundedStreamLineParticleCloud.C',
    'wallBoundedStreamLine/wallBoundedParticle.C',
    'surfaceInterpolate/surfaceInterpolate.C',
    'regionSizeDistribution/regionSizeDistribution.C',
    'histogram/histogram.C',
    'histogram/histogramModels/histogramModel/histogramModel.C',
    'histogram/histogramModels/histogramModel/histogramModelNew.C',
    'histogram/histogramModels/equalBinWidth/equalBinWidth.C',
    'histogram/histogramModels/unequalBinWidth/unequalBinWidth.C',
    'fieldExpression/fieldExpression.C',
    'components/components.C',
    'randomise/randomise.C',
    'div/div.C',
    'grad/grad.C',
    'ddt/ddt.C',
    'mag/mag.C',
    'magSqr/magSqr.C',
    'vorticity/vorticity.C',
    'LambVector/LambVector.C',
    'enstrophy/enstrophy.C',
    'Q/Q.C',
    'Lambda2/Lambda2.C',
    'flowType/flowType.C',
    'CourantNo/CourantNo.C',
    'PecletNo/PecletNo.C',
    'blendingFactor/blendingFactor.C',
    'momentum/momentum.C',
    'momentumError/momentumError.C',
    'pressure/pressure.C',
    'MachNo/MachNo.C',
    'Curle/Curle.C',
    'reference/reference.C',
    'log/log.C',
    'pow/pow.C',
    'norm/norm.C',
    'fieldsExpression/fieldsExpression.C',
    'add/add.C',
    'subtract/subtract.C',
    'multiply/multiply.C',
    'turbulenceFields/turbulenceFields.C',
    'yPlus/yPlus.C',
    'wallShearStress/wallShearStress.C',
    'wallHeatFlux/wallHeatFlux.C',
    'writeCellCentres/writeCellCentres.C',
    'writeCellVolumes/writeCellVolumes.C',
    'XiReactionRate/XiReactionRate.C',
    'streamFunction/streamFunction.C',
    'valueAverage/valueAverage.C',
    'fluxSummary/fluxSummary.C',
    'mapFields/mapFields.C',
    'reactionSensitivityAnalysis/reactionsSensitivityAnalysisObjects.C',
    'DESModelRegions/DESModelRegions.C',
    'externalCoupled/externalCoupled.C',
    'externalCoupled/externalCoupledMixed/externalCoupledMixedFvPatchFields.C',
    'externalCoupled/externalCoupledTemperatureMixed/externalCoupledTemperatureMixedFvPatchScalarField.C',
    'extractEulerianParticles/extractEulerianParticles/extractEulerianParticles.C',
    'extractEulerianParticles/eulerianParticle/eulerianParticle.C',
    'particleDistribution/particleDistribution.C',
    'flux/flux.C',
    'ddt2/ddt2.C',
    'zeroGradient/zeroGradient.C',
    'stabilityBlendingFactor/stabilityBlendingFactor.C',
    'interfaceHeight/interfaceHeight.C',
    'DMD/DMD.C',
    'DMD/DMDModels/DMDModel/DMDModel.C',
    'DMD/DMDModels/DMDModel/DMDModelNew.C',
    'DMD/DMDModels/derived/STDMD/STDMD.C',
    'resolutionIndex/resolutionIndex.C',
    'resolutionIndex/resolutionIndexModels/resolutionIndexModel/resolutionIndexModel.C',
    'resolutionIndex/resolutionIndexModels/resolutionIndexModel/resolutionIndexModelNew.C',
    'resolutionIndex/resolutionIndexModels/PopeIndex/PopeIndex.C',
    'resolutionIndex/resolutionIndexModels/CelikNuIndex/CelikNuIndex.C',
    'resolutionIndex/resolutionIndexModels/CelikEtaIndex/CelikEtaIndex.C',
    'age/age.C',
    'comfort/comfort.C',
]
link_with = [
    lib_finiteVolume,
    lib_finiteArea,
    lib_fileFormats,
    lib_surfMesh,
    lib_meshTools,
    lib_dynamicMesh,
    lib_sampling,
    lib_lagrangian,
    lib_distributionModels,
    lib_fluidThermophysicalModels,
    lib_solidThermo,
    lib_incompressibleTransportModels,
    lib_turbulenceModels,
    lib_compressibleTransportModels,
    lib_incompressibleTurbulenceModels,
    lib_compressibleTurbulenceModels,
    lib_turbulenceModelSchemes,
    lib_chemistryModel,
    lib_reactionThermophysicalModels,
    lib_pairPatchAgglomeration,
    lib_incompressibleMultiphaseSystems,
    lib_reactingMultiphaseSystem,
]
dependencies = []
cpp_args = [
    '-I' + meson.source_root() / 'src/functionObjects/field',
    '-I' + recursive_include_dirs / 'src/finiteVolume',
    '-I' + recursive_include_dirs / 'src/finiteArea',
    '-I' + recursive_include_dirs / 'src/fileFormats',
    '-I' + recursive_include_dirs / 'src/surfMesh',
    '-I' + recursive_include_dirs / 'src/meshTools',
    '-I' + recursive_include_dirs / 'src/dynamicMesh',
    '-I' + recursive_include_dirs / 'src/sampling',
    '-I' + recursive_include_dirs / 'src/lagrangian/basic',
    '-I' + recursive_include_dirs / 'src/lagrangian/distributionModels',
    '-I' + recursive_include_dirs / 'src/thermophysicalModels/basic',
    '-I' + meson.source_root() / 'src/transportModels',
    '-I' + recursive_include_dirs / 'src/transportModels/compressible',
    '-I' + recursive_include_dirs / 'src/TurbulenceModels/turbulenceModels',
    '-I' + recursive_include_dirs / 'src/TurbulenceModels/incompressible',
    '-I' + recursive_include_dirs / 'src/TurbulenceModels/compressible',
    '-I' + recursive_include_dirs / 'src/TurbulenceModels/schemes',
    '-I' + recursive_include_dirs / 'src/transportModels/compressible',
    '-I' + recursive_include_dirs / 'src/thermophysicalModels/basic',
    '-I' + recursive_include_dirs / 'src/thermophysicalModels/solidThermo',
    '-I' + recursive_include_dirs / 'src/thermophysicalModels/chemistryModel',
    '-I' + recursive_include_dirs / 'src/thermophysicalModels/reactionThermo',
    '-I' + recursive_include_dirs / 'src/thermophysicalModels/specie',
    '-I' + recursive_include_dirs / 'src/fvAgglomerationMethods/pairPatchAgglomeration',
    '-I' + recursive_include_dirs / 'src/phaseSystemModels/multiphaseInter/phasesSystem',
    '-I' + recursive_include_dirs / 'src/phaseSystemModels/reactingEuler/multiphaseSystem',
    '-I' + recursive_include_dirs / 'src/functionObjects/field',
    '-I' + recursive_include_dirs / 'src/OpenFOAM',
    '-I' + recursive_include_dirs / 'src/OSspecific/POSIX',
]
lib_fieldFunctionObjects = library(
    'fieldFunctionObjects',
    srcfiles,
    link_with: link_with,
    dependencies: dependencies,
    cpp_args: cpp_args,
    implicit_include_directories: false,
    install: true,
)
pkg.generate(lib_fieldFunctionObjects)
