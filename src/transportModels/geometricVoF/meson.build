srcfiles = [
    lnInclude_hack,
    'cellCuts/cutCell/cutCell.C',
    'cellCuts/cutCell/cutCellPLIC.C',
    'cellCuts/cutCell/cutCellIso.C',
    'cellCuts/cutFace/cutFace.C',
    'cellCuts/cutFace/cutFacePLIC.C',
    'cellCuts/cutFace/cutFaceAdvect.C',
    'cellCuts/cutFace/cutFaceIso.C',
    'surfaceIterators/surfaceIteratorPLIC.C',
    'surfaceIterators/surfaceIteratorIso.C',
    'reconstructedDistanceFunction/reconstructedDistanceFunction.C',
    'reconstructionSchemes/reconstructionSchemesNew.C',
    'reconstructionSchemes/reconstructionSchemes.C',
    'reconstructionSchemes/isoSchemes/isoAlpha/isoAlpha.C',
    'reconstructionSchemes/plicSchemes/gradAlpha/gradAlpha.C',
    'reconstructionSchemes/plicSchemes/plicRDF/plicRDF.C',
    'advectionSchemes/isoAdvection/isoAdvection.C',
    'sampledInterface/sampledInterface.C',
]
link_with = [
    lib_finiteVolume,
    lib_fileFormats,
    lib_surfMesh,
    lib_meshTools,
    lib_sampling,
    lib_dynamicMesh,
    lib_twoPhaseMixture,
    lib_twoPhaseProperties,
]
dependencies = []
cpp_args = [
    '-I' + meson.source_root() / 'src/transportModels/geometricVoF',
    '-I' + recursive_include_dirs / 'src/finiteVolume',
    '-I' + recursive_include_dirs / 'src/fileFormats',
    '-I' + recursive_include_dirs / 'src/surfMesh',
    '-I' + recursive_include_dirs / 'src/meshTools',
    '-I' + recursive_include_dirs / 'src/sampling',
    '-I' + recursive_include_dirs / 'src/dynamicMesh',
    '-I' + recursive_include_dirs / 'src/transportModels/interfaceProperties',
    '-I' + recursive_include_dirs / 'src/transportModels/twoPhaseProperties',
    '-I' + recursive_include_dirs / 'src/transportModels/geometricVoF',
    '-I' + recursive_include_dirs / 'src/OpenFOAM',
    '-I' + recursive_include_dirs / 'src/OSspecific/POSIX',
]
lib_geometricVoF = library(
    'geometricVoF',
    srcfiles,
    link_with: link_with,
    dependencies: dependencies,
    cpp_args: cpp_args,
    implicit_include_directories: false,
    install: true,
)
pkg.generate(lib_geometricVoF)
