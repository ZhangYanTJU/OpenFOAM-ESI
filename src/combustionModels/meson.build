srcfiles = [
    lnInclude_hack,
    'combustionModel/combustionModel.C',
    'CombustionModel/CombustionModel/CombustionModels.C',
    'diffusion/diffusions.C',
    'infinitelyFastChemistry/infinitelyFastChemistrys.C',
    'PaSR/PaSRs.C',
    'EDC/EDCs.C',
    'eddyDissipationDiffusionModel/eddyDissipationDiffusionModels.C',
    'laminar/laminars.C',
    'FSD/reactionRateFlameAreaModels/consumptionSpeed/consumptionSpeed.C',
    'FSD/reactionRateFlameAreaModels/reactionRateFlameArea/reactionRateFlameArea.C',
    'FSD/reactionRateFlameAreaModels/reactionRateFlameArea/reactionRateFlameAreaNew.C',
    'FSD/reactionRateFlameAreaModels/relaxation/relaxation.C',
    'FSD/FSDs.C',
    'diffusionMulticomponent/diffusionMulticomponents.C',
    'zoneCombustion/zoneCombustions.C',
    'noCombustion/noCombustions.C',
]
link_with = [
    lib_finiteVolume,
    lib_meshTools,
    lib_compressibleTransportModels,
    lib_specie,
    lib_fluidThermophysicalModels,
    lib_reactionThermophysicalModels,
    lib_chemistryModel,
    lib_turbulenceModels,
    lib_compressibleTurbulenceModels,
    lib_thermophysicalProperties,
]
dependencies = []
cpp_args = [
    '-I' + meson.source_root() / 'src/combustionModels',
    '-I' + recursive_include_dirs / 'src/finiteVolume',
    '-I' + recursive_include_dirs / 'src/meshTools',
    '-I' + recursive_include_dirs / 'src/transportModels/compressible',
    '-I' + recursive_include_dirs / 'src/thermophysicalModels/basic',
    '-I' + recursive_include_dirs / 'src/thermophysicalModels/specie',
    '-I' + recursive_include_dirs / 'src/thermophysicalModels/reactionThermo',
    '-I' + recursive_include_dirs / 'src/thermophysicalModels/chemistryModel',
    '-I' + recursive_include_dirs / 'src/TurbulenceModels/turbulenceModels',
    '-I' + recursive_include_dirs / 'src/TurbulenceModels/compressible',
    '-I' + recursive_include_dirs / 'src/thermophysicalModels/thermophysicalProperties',
    '-I' + recursive_include_dirs / 'src/combustionModels',
    '-I' + recursive_include_dirs / 'src/OpenFOAM',
    '-I' + recursive_include_dirs / 'src/OSspecific/POSIX',
]
lib_combustionModels = library(
    'combustionModels',
    srcfiles,
    link_with: link_with,
    dependencies: dependencies,
    cpp_args: cpp_args,
    implicit_include_directories: false,
    install: true,
)
pkg.generate(lib_combustionModels)
