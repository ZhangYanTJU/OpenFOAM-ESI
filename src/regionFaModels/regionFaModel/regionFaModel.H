/*---------------------------------------------------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     |
    \\  /    A nd           | Copyright (C) 2019 OpenCFD Ltd.
     \\/     M anipulation  |
-------------------------------------------------------------------------------
License
    This file is part of OpenFOAM.

    OpenFOAM is free software: you can redistribute it and/or modify it
    under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    OpenFOAM is distributed in the hope that it will be useful, but WITHOUT
    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
    FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
    for more details.

    You should have received a copy of the GNU General Public License
    along with OpenFOAM.  If not, see <http://www.gnu.org/licenses/>.

Class
    Foam::regionFaModels::regionFaModel

Description
    Base class for area region models

SourceFiles
    regionFaModelI.H
    regionFaModel.C

\*---------------------------------------------------------------------------*/

#ifndef regionFaModel_H
#define regionFaModel_H

#include "volMesh.H"
#include "IOdictionary.H"
#include "Switch.H"
#include "labelList.H"
#include "areaFields.H"
#include "faMesh.H"
#include "volSurfaceMapping.H"


// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

namespace Foam
{

namespace regionModels
{

/*---------------------------------------------------------------------------*\
                         Class regionFaModel Declaration
\*---------------------------------------------------------------------------*/

class regionFaModel
{

private:

    // Private Member Functions

        //- No copy construct
        regionFaModel(const regionFaModel&) = delete;

        //- No copy assignment
        void operator=(const regionFaModel&) = delete;

        //- Construct region mesh and fields
        void constructMeshObjects();

        //- Initialise the region
        void initialise();


protected:

    // Protected data

        //- Reference to the primary mesh database
        const fvMesh& primaryMesh_;

        //- Reference to fvPatch
        const fvPatch& patch_;

        //- Reference to the time database
        const Time& time_;

        //- Active flag
        Switch active_;

        //- Active information output
        Switch infoOutput_;

        //- Model name
        const word modelName_;

        //- Pointer to the region mesh database
        autoPtr<faMesh> regionMeshPtr_;

        //- Model coefficients dictionary
        dictionary coeffs_;

        //-Volume-to surface mapping
        autoPtr<volSurfaceMapping> vsmPtr_;


        // Addressing

            //- Patch IDs on the primary region coupled to this region
            label patchID_;


        //- Region name
        word regionName_;


    // Protected member functions

        //- Read control parameters from dictionary
        virtual bool read(const dictionary& dict);


public:

    //- Runtime type information
    TypeName("regionFaModel");


    // Constructors

        //- Construct from mesh and name and dict
        regionFaModel
        (
            const fvPatch& patch,
            const word& regionType,
            const word& modelName,
            const dictionary& dict,
            bool readFields = true
        );


    //- Destructor
    virtual ~regionFaModel();


    // Member Functions

        // Access

            //- Return the reference to the primary mesh database
            inline const fvMesh& primaryMesh() const;

            //- Return the reference to the time database
            inline const Time& time() const;

            //- Return the active flag
            inline const Switch& active() const;

            //- Return the information flag
            inline const Switch& infoOutput() const;

            //- Return the model name
            inline const word& modelName() const;

            //- Return the region mesh database
            inline const faMesh& regionMesh() const;

            //- Return the region mesh database for manipulation
            inline faMesh& regionMesh();

            //- Return the model coefficients dictionary
            inline const dictionary& coeffs() const;

            //- Return the solution dictionary
            inline const dictionary& solution() const;

            //- Return volSurfaceMapping
            const volSurfaceMapping& vsm() const;


            // Addressing


                //- Return the list of patch IDs on the primary region coupled
                //  to this region
                inline label patchID();



        // Helper


        // Evolution

            //- Main driver routing to evolve the region - calls other evolves
            virtual void evolve();

            //- Pre-evolve region
            virtual void preEvolveRegion();

            //- Evolve the region
            virtual void evolveRegion();

            //- Post-evolve region
            virtual void postEvolveRegion();


        // I-O

            //- Provide some feedback
            virtual void info();
};


// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

} // End namespace regionFaModels
} // End namespace Foam

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

#include "regionFaModelI.H"

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //


#endif

// ************************************************************************* //
