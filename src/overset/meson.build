srcfiles = [
    lnInclude_hack,
    'cellCellStencil/cellCellStencil/cellCellStencil.C',
    'cellCellStencil/cellVolumeWeight/cellVolumeWeightCellCellStencil.C',
    'cellCellStencil/cellCellStencil/cellCellStencilObject.C',
    'cellCellStencil/inverseDistance/inverseDistanceCellCellStencil.C',
    'cellCellStencil/inverseDistance/waveMethod.C',
    'cellCellStencil/inverseDistance/meshToMeshData.C',
    'cellCellStencil/trackingInverseDistance/voxelMeshSearch.C',
    'cellCellStencil/trackingInverseDistance/trackingInverseDistanceCellCellStencil.C',
    'cellCellStencil/leastSquares/leastSquaresCellCellStencil.C',
    'oversetFvMesh/oversetFvMeshBase.C',
    'oversetFvMesh/dynamicOversetFvMesh/dynamicOversetFvMesh.C',
    'oversetFvMesh/staticOversetFvMesh/staticOversetFvMesh.C',
    'fvMeshPrimitiveLduAddressing/fvMeshPrimitiveLduAddressing.C',
    'oversetPolyPatch/oversetPolyPatch.C',
    'oversetPolyPatch/oversetFvPatch.C',
    'oversetPolyPatch/oversetFvPatchFields.C',
    'oversetPolyPatch/oversetFvsPatchFields.C',
    'oversetPolyPatch/oversetPointPatch.C',
    'oversetPolyPatch/oversetPointPatchFields.C',
    'oversetAdjustPhi/oversetAdjustPhi.C',
    'regionsToCell/regionsToCell.C',
    'lduPrimitiveProcessorInterface/GAMG/calculatedProcessorGAMGInterface.C',
    'lduPrimitiveProcessorInterface/GAMG/calculatedProcessorGAMGInterfaceField.C',
    'oversetCoupledPolyPatch/oversetLduInterfaceField/oversetLduInterfaceField.C',
    'oversetCoupledPolyPatch/oversetLduInterface/oversetLduInterface.C',
    'oversetCoupledPolyPatch/oversetGAMGInterface/oversetGAMGInterface.C',
    'oversetCoupledPolyPatch/oversetGAMGInterfaceField/oversetGAMGInterfaceField.C',
    'oversetPatchPhiErr/oversetPatchPhiErr.C',
]
link_with = [
    lib_finiteVolume,
    lib_fileFormats,
    lib_surfMesh,
    lib_meshTools,
    lib_blockMesh,
    lib_dynamicMesh,
    lib_dynamicFvMesh,
    lib_sampling,
    lib_decompositionMethods,
]
dependencies = []
cpp_args = [
    '-I' + meson.source_root() / 'src/overset',
    '-I' + recursive_include_dirs / 'src/finiteVolume',
    '-I' + recursive_include_dirs / 'src/fileFormats',
    '-I' + recursive_include_dirs / 'src/meshTools',
    '-I' + recursive_include_dirs / 'src/mesh/blockMesh',
    '-I' + recursive_include_dirs / 'src/dynamicMesh',
    '-I' + recursive_include_dirs / 'src/dynamicFvMesh',
    '-I' + recursive_include_dirs / 'src/sampling',
    '-I' + recursive_include_dirs / 'src/parallel/decompose/decompositionMethods',
    '-I' + recursive_include_dirs / 'src/overset',
    '-I' + recursive_include_dirs / 'src/OpenFOAM',
    '-I' + recursive_include_dirs / 'src/OSspecific/POSIX',
]
lib_overset = library(
    'overset',
    srcfiles,
    link_with: link_with,
    dependencies: dependencies,
    cpp_args: cpp_args,
    implicit_include_directories: false,
    install: true,
)
pkg.generate(lib_overset)
