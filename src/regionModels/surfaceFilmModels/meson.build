srcfiles = [
    lnInclude_hack,
    'surfaceFilmModel/surfaceFilmModel.C',
    'surfaceFilmModel/surfaceFilmModelNew.C',
    'surfaceFilmRegionModel/surfaceFilmRegionModel.C',
    'noFilm/noFilm.C',
    'kinematicSingleLayer/kinematicSingleLayer.C',
    'thermoSingleLayer/thermoSingleLayer.C',
    'submodels/filmSubModelBase.C',
    'submodels/kinematic/force/force/force.C',
    'submodels/kinematic/force/force/forceNew.C',
    'submodels/kinematic/force/forceList/forceList.C',
    'submodels/kinematic/force/contactAngleForces/contactAngleForce/contactAngleForce.C',
    'submodels/kinematic/force/contactAngleForces/distribution/distributionContactAngleForce.C',
    'submodels/kinematic/force/contactAngleForces/temperatureDependent/temperatureDependentContactAngleForce.C',
    'submodels/kinematic/force/contactAngleForces/perturbedTemperatureDependent/perturbedTemperatureDependentContactAngleForce.C',
    'submodels/kinematic/force/thermocapillaryForce/thermocapillaryForce.C',
    'submodels/kinematic/injectionModel/injectionModel/injectionModel.C',
    'submodels/kinematic/injectionModel/injectionModel/injectionModelNew.C',
    'submodels/kinematic/injectionModel/injectionModelList/injectionModelList.C',
    'submodels/kinematic/injectionModel/drippingInjection/drippingInjection.C',
    'submodels/kinematic/injectionModel/BrunDrippingInjection/BrunDrippingInjection.C',
    'submodels/kinematic/injectionModel/patchInjection/patchInjection.C',
    'submodels/kinematic/injectionModel/curvatureSeparation/curvatureSeparation.C',
    'submodels/kinematic/transferModels/transferModel/transferModel.C',
    'submodels/kinematic/transferModels/transferModel/transferModelNew.C',
    'submodels/kinematic/transferModels/transferModelList/transferModelList.C',
    'submodels/kinematic/filmThermoModel/filmThermoModel/filmThermoModel.C',
    'submodels/kinematic/filmThermoModel/filmThermoModel/filmThermoModelNew.C',
    'submodels/kinematic/filmThermoModel/constantFilmThermo/constantFilmThermo.C',
    'submodels/kinematic/filmThermoModel/liquidFilmThermo/liquidFilmThermo.C',
    'submodels/kinematic/filmTurbulenceModel/filmTurbulenceModel/filmTurbulenceModel.C',
    'submodels/kinematic/filmTurbulenceModel/filmTurbulenceModel/filmTurbulenceModelNew.C',
    'submodels/kinematic/filmTurbulenceModel/laminar/laminar.C',
    'submodels/thermo/phaseChangeModel/phaseChangeModel/phaseChangeModel.C',
    'submodels/thermo/phaseChangeModel/phaseChangeModel/phaseChangeModelNew.C',
    'submodels/thermo/phaseChangeModel/noPhaseChange/noPhaseChange.C',
    'submodels/thermo/phaseChangeModel/standardPhaseChange/standardPhaseChange.C',
    'submodels/thermo/phaseChangeModel/solidification/solidification.C',
    'submodels/thermo/phaseChangeModel/waxSolventEvaporation/waxSolventEvaporation.C',
    'submodels/thermo/heatTransferModel/heatTransferModel/heatTransferModel.C',
    'submodels/thermo/heatTransferModel/heatTransferModel/heatTransferModelNew.C',
    'submodels/thermo/heatTransferModel/constantHeatTransfer/constantHeatTransfer.C',
    'submodels/thermo/heatTransferModel/mappedConvectiveHeatTransfer/mappedConvectiveHeatTransfer.C',
    'submodels/thermo/filmRadiationModel/filmRadiationModel/filmRadiationModel.C',
    'submodels/thermo/filmRadiationModel/filmRadiationModel/filmRadiationModelNew.C',
    'submodels/thermo/filmRadiationModel/noRadiation/noRadiation.C',
    'submodels/thermo/filmRadiationModel/constantRadiation/constantRadiation.C',
    'submodels/thermo/filmRadiationModel/primaryRadiation/primaryRadiation.C',
    'submodels/thermo/filmRadiationModel/standardRadiation/standardRadiation.C',
    'submodels/thermo/filmViscosityModel/filmViscosityModel/filmViscosityModel.C',
    'submodels/thermo/filmViscosityModel/filmViscosityModel/filmViscosityModelNew.C',
    'submodels/thermo/filmViscosityModel/constantViscosity/constantViscosity.C',
    'submodels/thermo/filmViscosityModel/liquidViscosity/liquidViscosity.C',
    'submodels/thermo/filmViscosityModel/thixotropicViscosity/thixotropicViscosity.C',
    'submodels/thermo/filmViscosityModel/ArrheniusViscosity/ArrheniusViscosity.C',
    'submodels/thermo/filmViscosityModel/function1Viscosity/function1Viscosity.C',
    'submodels/thermo/filmViscosityModel/waxSolventViscosity/waxSolventViscosity.C',
    'derivedFvPatchFields/filmHeightInletVelocity/filmHeightInletVelocityFvPatchVectorField.C',
    'derivedFvPatchFields/inclinedFilmNusseltHeight/inclinedFilmNusseltHeightFvPatchScalarField.C',
    'derivedFvPatchFields/inclinedFilmNusseltInletVelocity/inclinedFilmNusseltInletVelocityFvPatchVectorField.C',
    'functionObjects/filmFlux/filmFlux.C',
]
link_with = [
    lib_finiteVolume,
    lib_meshTools,
    lib_compressibleTransportModels,
    lib_fluidThermophysicalModels,
    lib_specie,
    lib_thermophysicalProperties,
    lib_reactionThermophysicalModels,
    lib_SLGThermo,
    lib_distributionModels,
    lib_regionModels,
]
dependencies = []
cpp_args = [
    '-I' + meson.source_root() / 'src/regionModels/surfaceFilmModels',
    '-I' + recursive_include_dirs / 'src/finiteVolume',
    '-I' + recursive_include_dirs / 'src/meshTools',
    '-I' + recursive_include_dirs / 'src/transportModels/compressible',
    '-I' + recursive_include_dirs / 'src/thermophysicalModels/basic',
    '-I' + recursive_include_dirs / 'src/thermophysicalModels/specie',
    '-I' + recursive_include_dirs / 'src/thermophysicalModels/thermophysicalProperties',
    '-I' + recursive_include_dirs / 'src/thermophysicalModels/reactionThermo',
    '-I' + recursive_include_dirs / 'src/thermophysicalModels/SLGThermo',
    '-I' + recursive_include_dirs / 'src/lagrangian/distributionModels',
    '-I' + recursive_include_dirs / 'src/regionModels/regionModel',
    '-I' + recursive_include_dirs / 'src/regionModels/surfaceFilmModels',
    '-I' + recursive_include_dirs / 'src/OpenFOAM',
    '-I' + recursive_include_dirs / 'src/OSspecific/POSIX',
]
lib_surfaceFilmModels = library(
    'surfaceFilmModels',
    srcfiles,
    link_with: link_with,
    dependencies: dependencies,
    cpp_args: cpp_args,
    implicit_include_directories: false,
    install: true,
)
pkg.generate(lib_surfaceFilmModels)

subdir('derivedFvPatchFields')
