/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2106                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      dictionary;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

#sinclude   "someUnknownFile"
#sinclude   "$FOAM_CASE/someUnknownFile"
#includeIfPresent "$FOAM_CASE/someUnknownFile-$FOAM_CASENAME"

internalField   uniform 1;

// supply defaults
#default internalField  uniform 10;
#default dimensions     [ 1 2 -2 0 0 0 0 ];
#overwrite dimensions   [ 0 2 -2 0 0 0 0 ];
// #warn       dimensions      [ 0 2 -2 0 0 0 0 ];
// #error      dimensions      [ 0 2 -2 0 0 0 0 ];

active
{
    type            turbulentIntensityKineticEnergyInlet;
    intensity       0.1;
    value           $internalField;
}

inactive
{
    type            zeroGradient;
}


// Indirection
varType active;

// Indirection of values
x 5;
varName x;


//Indirection for keys
key inlet_9;


boundaryField
{
    Default_Boundary_Region
    {
        type            zeroGradient;
    }

    inlet_1  { $active }
    inlet_2  { $inactive }
    inlet_3  { $inactive }
    inlet_4  { $inactive }
    inlet_5  "a primitiveEntry is squashed by a directory entry";
    inlet_5  { $inactive }
    inlet_6a { $...inactive }   // Relative scoping - fairly horrible to use
    inlet_6b { $^inactive }     // Absolute scoping
    inlet_7  { ${inactive}}     // Test variable expansion
    inlet_8  { $inactive }
    ${key}   { $inactive }

    #include "testDictInc"

    outlet
    {
        type            inletOutlet;
        inletValue      $internalField;
        value           #include "value";
        // error           #remove self;
        x               ${${varName}};  // Test indirection/recursive expansion
        y               6;
    }

    // this should have no effect
    #remove inactive

    inlet_7  { ${${varType}}}   // Test indirection/recursive expansion
    inlet_8  { $active }

    #overwrite inlet_8  { type none; }
}


#include "testDict2"

verbatim #{

    This is a somewhat larger chunk of verbatim text that we would much
    prefer to move as a token rather than copying its entire content each
    time we do parsing or need to resize the token list.

#};

foo
{
    $active
}

bar
{
    $active
}

baz
{
    $active
}

"anynumber.*"
{
    $active
}

// this should work
#remove active

// this should work too
#remove ( bar baz )

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
